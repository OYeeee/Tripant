<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="mclass.store.tripant.diary.model.repository.DiaryRepository">
	<!--전체글 리스트 목록 뿌리기 -->
	<select id="selectDiaryList" resultType="DiaryBoardEntity"
		parameterType="map">
		SELECT D.DIARY_ID,
		D.DIARY_MEM_EMAIL, D.MEM_NICK, D.DIARY_PLAN_ID,
		D.DIARY_TITLE, D.DIARY_CONTENT,
		D.DIARY_DATE, D.DIARY_OPEN,
		D.DIARY_VIEWS, D.DIARY_THEME, D.PLAN_AREA_CODE
		FROM
		VIEW_DIARY_MEMBER_PLAN D
		WHERE
		<if test="areaname != null and !areaname.equals('') ">
			PLAN_AREA_CODE =
			(SELECT AREA_CODE FROM AREA
			WHERE
			AREA_SHORT_NAME = #{areaname}
			) AND
		</if>
		ROWNUM <![CDATA[<=]]>
		#{maxNum}
	</select>
	<!-- 나의 글리스트 목록 뿌리기 -->
	<select id="selectMyDiaryList" resultType="DiaryBoardEntity"
		parameterType="map">
		select * from (
		select t1.*, ROWNUM rn from (
		SELECT
		DIARY_ID,
		DIARY_MEM_EMAIL,
		MEM_NICK,
		DIARY_PLAN_ID,
		DIARY_TITLE,
		DIARY_CONTENT,
		DIARY_DATE,
		DIARY_OPEN,
		DIARY_VIEWS,
		DIARY_THEME,
		PLAN_AREA_CODE
		FROM
		VIEW_DIARY_MEMBER_PLAN D
		WHERE
		DIARY_MEM_EMAIL = #{email}
		ORDER BY
		DIARY_DATE DESC
		) t1
		)
		where #{maxNum}-4 <![CDATA[<]]>
		rn and rn <![CDATA[<=]]>
		#{maxNum}
	</select>


	<!-- 글 작성 등록 시키기 -->
	<insert id="insertDiary" parameterType="DiaryBoardEntity">
		INSERT INTO diary (
		DIARY_ID, DIARY_MEM_EMAIL,
		DIARY_PLAN_ID, DIARY_TITLE, DIARY_CONTENT,
		DIARY_DATE, DIARY_OPEN,
		DIARY_VIEWS, DIARY_THEME)
		VALUES
		(diary_seq.NEXTVAL, #{diaryMemEmail},
		#{diaryPlanId}, #{diaryTitle},
		#{diaryContent},
		to_date(#{diaryDate}, 'yyyy-mm-dd'), #{diaryOpen},
		#{diaryViews},
		#{diaryTheme})
	</insert>
	<!-- 특정 ID의 다이어리 조회 -->
	<select id="findById" parameterType="long"
		resultType="DiaryBoardEntity">
		SELECT * FROM DIARY WHERE DIARY_ID = #{id}
	</select>
	<!-- 특정 ID의 PlAN 조회 -->
	<select id="selectPlanById" parameterType="string"
		resultType="WritePlanTitleEntity">
		SELECT p.plan_id AS planId, p.plan_title AS planTitle
		FROM
		diary d
		JOIN plan p ON d.diary_plan_id = p.plan_id
		WHERE
		d.diary_mem_email = #{diaryMemEmail}
	</select>
	<!-- 공개된 일기 선택 -->
	<select id="selectPublicDiaries" resultType="DiaryBoardEntity">
		SELECT * FROM diary
		WHERE DIARY_OPEN = '0'
	</select>

	<!-- 비공개된 일기 선택 -->
	<select id="selectPrivateDiaries" resultType="DiaryBoardEntity">
		SELECT * FROM diary
		WHERE DIARY_OPEN = '1'
	</select>
	<!--최신순 -->
	<select id="selectLatest" resultType="DiaryBoardEntity">
		select diary_id,
		diary_title ,to_char(diary_date,'yyyy-MM-dd')
		diary_date,diary_views,
		nvl(likes,0) likes, mem_nick from
		((select a.diary_id, a.diary_title
		diary_title, a.diary_date diary_date,
		a.diary_views
		diary_views,a.diary_mem_email, b.likes
		from DIARY a
		left join (select
		count (mem_email) likes , diary_id from diary_likes
		group by diary_id)
		b on a.diary_id= b.diary_id))
		join member on diary_mem_email=mem_email
		order by diary_views desc nulls last
	</select>

	<!-- 인기순 -->
	<select id="selectPopular" resultType="DiaryBoardEntity">
		select diary_id,
		diary_title ,to_char(diary_date,'yyyy-MM-dd')
		diary_date,diary_views,
		nvl(likes,0) likes, mem_nick from
		((select a.diary_id, a.diary_title
		diary_title, a.diary_date diary_date,
		a.diary_views
		diary_views,a.diary_mem_email, b.likes
		from DIARY a
		left
		join (select
		count (mem_email) likes , diary_id from diary_likes group
		by diary_id)
		b on a.diary_id= b.diary_id))
		join member on
		diary_mem_email=mem_email
		order by likes desc nulls last
	</select>

	<select id="selectDiaryById" parameterType="int"
		resultType="DiaryBoardEntity">
		SELECT * FROM diary WHERE DIARY_ID = #{diaryId}
	</select>
	<!-- 조회수 증가 -->
	<update id="incrementDiaryViews" parameterType="int">
		UPDATE diary
		SET
		DIARY_VIEWS = COALESCE(DIARY_VIEWS, 0) + 1
		WHERE DIARY_ID = #{diaryId}
	</update>

	<!-- 글 삭제 -->
	<delete id="deleteDiaryById" parameterType="int">
		DELETE FROM diary
		WHERE DIARY_ID = #{diaryId}
	</delete>
	<!-- 글 수정 -->
	<update id="updateDiary" parameterType="DiaryPostEntity">
		UPDATE diary
		SET
		DIARY_TITLE = #{diaryTitle},
		DIARY_CONTENT = #{diaryContent},
		DIARY_DATE = #{diaryDate},
		DIARY_OPEN = #{diaryOpen},
		DIARY_THEME =
		#{diaryTheme}
		WHERE DIARY_ID = #{diaryId}
	</update>
	<!-- 좋아요 누르기/ 해제하기 -->
	<insert id="insertDiaryLike" parameterType="map">
		INSERT INTO diary_likes (DIARY_ID, MEM_EMAIL)
		VALUES (#{diaryId}, #{memEmail})
	</insert>

	<delete id="deleteDiaryLike" parameterType="map">
		DELETE FROM diary_likes
		WHERE DIARY_ID = #{diaryId} AND MEM_EMAIL = #{memEmail}
	</delete>

	<select id="selectDiaryLike" parameterType="map"
		resultType="int">
		SELECT COUNT(*)
		FROM diary_likes
		WHERE DIARY_ID = #{diaryId} AND MEM_EMAIL = #{memEmail}
	</select>
</mapper>