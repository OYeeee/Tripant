<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="mclass.store.tripant.diary.model.repository.DiaryRepository">
	<!--전체글 리스트 목록 뿌리기 -->
	<select id="selectDiaryList" resultType="DiaryBoardEntity" parameterType="map">
		SELECT D.DIARY_ID,
		D.DIARY_MEM_EMAIL, D.MEM_NICK, D.DIARY_PLAN_ID, D.DIARY_TITLE, D.DIARY_CONTENT,
		D.DIARY_DATE, D.DIARY_OPEN, D.DIARY_VIEWS, D.DIARY_THEME, D.PLAN_AREA_CODE
		FROM VIEW_DIARY_MEMBER_PLAN D
		WHERE
		<if test="areaname != null and !areaname.equals('') ">
		 PLAN_AREA_CODE = 
			(SELECT AREA_CODE FROM AREA 
				WHERE AREA_SHORT_NAME = #{areaname} 
			) AND 
		</if>
		ROWNUM <![CDATA[<=]]> #{maxNum}
	</select>
		<!-- 나의 글리스트 목록 뿌리기 -->
<select id="selectMyDiaryList" resultType="DiaryBoardEntity" parameterType="map">
    SELECT 
        DIARY_ID,
        DIARY_MEM_EMAIL, 
        MEM_NICK, 
        DIARY_PLAN_ID, 
        DIARY_TITLE, 
        DIARY_CONTENT,
        DIARY_DATE,
        DIARY_OPEN, 
        DIARY_VIEWS, 
        DIARY_THEME,
        PLAN_AREA_CODE
    FROM 
        VIEW_DIARY_MEMBER_PLAN D
    WHERE 
        DIARY_MEM_EMAIL = #{diaryMemEmail}
        AND ROWNUM <![CDATA[<=]]> #{maxNum}
    ORDER BY 
        DIARY_DATE DESC
</select>
        
	
	<!-- 글 작성 등록 시키기 -->
	<insert id="insertDiary" parameterType="DiaryBoardEntity">
		INSERT INTO diary (
		DIARY_ID, DIARY_MEM_EMAIL,
		DIARY_PLAN_ID, DIARY_TITLE, DIARY_CONTENT,
		DIARY_DATE, DIARY_OPEN,
		DIARY_VIEWS, DIARY_THEME)
		VALUES
		(diary_seq.NEXTVAL, #{diaryMemEmail},
		#{diaryPlanId}, #{diaryTitle},
		#{diaryContent},
		to_date(#{diaryDate}, 'yyyy-mm-dd'), #{diaryOpen},
		#{diaryViews},
		#{diaryTheme})
	</insert>
	<!-- 특정 ID의 다이어리 조회 -->
	<select id="findById" parameterType="long"
		resultType="DiaryBoardEntity">
		SELECT * FROM DIARY WHERE DIARY_ID = #{id}
	</select>
	<!-- 특정 ID의 PlAN 조회 -->
	<select id="selectPlanById" parameterType="string"
		resultType="WritePlanTitleEntity">
		SELECT p.plan_id AS planId, p.plan_title AS planTitle
		FROM
		diary d
		JOIN plan p ON d.diary_plan_id = p.plan_id
		WHERE
		d.diary_mem_email = #{diaryMemEmail}
	</select>
	<!-- 공개된 일기 선택 -->
	<select id="selectPublicDiaries" resultType="DiaryBoardEntity">
		SELECT * FROM diary
		WHERE DIARY_OPEN = '0'
	</select>

	<!-- 비공개된 일기 선택 -->
	<select id="selectPrivateDiaries" resultType="DiaryBoardEntity">
		SELECT * FROM diary
		WHERE DIARY_OPEN = '1'
	</select>
	<!--지역코드  -->
	<select id="selectAreaCode"  parameterType="string" resultType="DiaryBoardEntity">
		select d.diary_id,
		d.diary_title, d.diary_content, d.diary_date,
		d.diary_mem_email,
		d.diary_views from diary D
		join plan P on D.diary_plan_id = P.plan_id
		where P.plan_area_code = #{planAreaCode}

	</select>
	
	<!-- 글 삭제 -->
	<delete id="deleteDiaryById" parameterType="string">
		DELETE FROM diary
		WHERE DIARY_ID = #{diaryId}
	</delete>
	<!-- 글 수정 -->
	<update id="updateDiary" parameterType="DiaryPostEntity">
		UPDATE diary
		SET
		DIARY_TITLE = #{diaryTitle},
		DIARY_CONTENT = #{diaryContent},
		DIARY_DATE = #{diaryDate},
		DIARY_OPEN = #{diaryOpen},
		DIARY_THEME =
		#{diaryTheme}
		WHERE DIARY_ID = #{diaryId}
	</update>
	<update id="incrementLikes" parameterType="DiaryPostEntity">
		UPDATE diary_board SET diary_likes = diary_likes + 1
		WHERE diary_id =
		#{diaryId}
	</update>
</mapper>